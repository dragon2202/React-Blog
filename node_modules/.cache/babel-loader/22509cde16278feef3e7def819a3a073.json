{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Documents\\\\reactblog\\\\src\\\\pages\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks'; //apollo/client\n\nimport { Button } from 'antd';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport Helmet from 'react-helmet';\nimport { GET_POST_QUERY } from '../queries/posts';\nconst options = {\n  theme: 'snow'\n};\nexport default function PostViewer() {\n  _s();\n\n  var _data$post, _data$post2, _data$post3, _data$post4;\n\n  const contentContainer = useRef(null);\n  const [editorEl, setEditorEl] = useState(null);\n  const {\n    id\n  } = useParams();\n  const match = useRouteMatch();\n  let history = useHistory(); // eslint-disable-next-line\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POST_QUERY, {\n    variables: {\n      id\n    },\n    onCompleted: ({\n      post\n    }) => {\n      if (post.text) {\n        const delta = JSON.parse(post.text);\n        editorEl.setContents(delta);\n      }\n    }\n  });\n\n  const editPost = () => history.push({\n    pathname: '/edit-post',\n    state: {\n      data\n    }\n  });\n\n  useEffect(() => {\n    setEditorEl(new Quill(contentContainer.current, options));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"post-viewer-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: data === null || data === void 0 ? void 0 : (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : _data$post2.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: data === null || data === void 0 ? void 0 : (_data$post3 = data.post) === null || _data$post3 === void 0 ? void 0 : _data$post3.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: match.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:type\",\n        content: \"article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: data === null || data === void 0 ? void 0 : (_data$post4 = data.post) === null || _data$post4 === void 0 ? void 0 : _data$post4.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: editPost,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      ref: contentContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostViewer, \"DoxwBwdycYmW4IxqU4sdXmpYkhA=\", false, function () {\n  return [useParams, useRouteMatch, useHistory, useQuery];\n});\n\n_c = PostViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewer\");","map":{"version":3,"sources":["C:/Users/Calvin/Documents/reactblog/src/pages/post.js"],"names":["React","useEffect","useRef","useState","useHistory","useParams","useRouteMatch","useQuery","Button","Quill","Helmet","GET_POST_QUERY","options","theme","PostViewer","contentContainer","editorEl","setEditorEl","id","match","history","data","error","loading","variables","onCompleted","post","text","delta","JSON","parse","setContents","editPost","push","pathname","state","current","title","image","url","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router-dom';\r\nimport {useQuery} from '@apollo/react-hooks';//apollo/client\r\nimport {Button} from 'antd';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.snow.css';\r\nimport Helmet from 'react-helmet';\r\n\r\nimport {GET_POST_QUERY} from '../queries/posts';\r\n\r\nconst options = {\r\n    theme: 'snow'\r\n}\r\n\r\nexport default function PostViewer() {\r\n    const contentContainer = useRef(null)\r\n    const [editorEl, setEditorEl] = useState(null)\r\n    const {id} = useParams()\r\n    const match = useRouteMatch()\r\n\r\n    let history = useHistory()\r\n    // eslint-disable-next-line\r\n    const {data, error, loading} = useQuery(GET_POST_QUERY, {\r\n        variables: {\r\n            id\r\n        },\r\n        onCompleted: ({post}) => {\r\n            if(post.text) {\r\n                const delta = JSON.parse(post.text);\r\n                editorEl.setContents(delta)\r\n            }\r\n        }\r\n    })\r\n\r\n    const editPost = () => history.push({\r\n        pathname: '/edit-post',\r\n        state: {\r\n            data\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setEditorEl(new Quill(contentContainer.current, options))\r\n    }, [])\r\n\r\n    return (\r\n        <article className=\"post-viewer-container\">\r\n            <Helmet>\r\n                <title>{data?.post?.title}</title>\r\n                <meta property=\"og:image\" content={data?.post?.image}/>\r\n                <meta property=\"og:title\" content={data?.post?.title}/>\r\n                <meta property=\"og:url\" content={match.url}/>\r\n                <meta property=\"og:type\" content=\"article\"/>\r\n                <meta property=\"og:description\" content={data?.post?.description}/>\r\n            </Helmet>\r\n            <Button type=\"primary\" onClick={editPost}>Edit Post</Button>\r\n            <section ref={contentContainer}></section>\r\n        </article>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}