{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Documents\\\\reactblog\\\\src\\\\pages\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Button } from 'antd';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport { GET_POST_QUERY } from '../queries/posts';\nexport default function PostViewer() {\n  _s();\n\n  const contentContainer = useRef(null);\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POST_QUERY, {\n    variables: {\n      id\n    }\n  });\n  useEffect(() => {\n    //React Hook- component needs to do something after render\n    if (contentContainer.current !== null) {\n      const article = document.createElement('article');\n      const options = {};\n      new Quill(article, options);\n      setTimeout(() => {\n        contentContainer.current.appendChild(article);\n      }, 0);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"post-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      ref: contentContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostViewer, \"GNjvXrNwERy+0YHbWJQThlsDNmM=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = PostViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewer\");","map":{"version":3,"sources":["C:/Users/Calvin/Documents/reactblog/src/pages/post.js"],"names":["React","useEffect","useRef","useParams","useQuery","Button","Quill","GET_POST_QUERY","PostViewer","contentContainer","id","data","error","loading","variables","current","article","document","createElement","options","setTimeout","appendChild"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,gBAAgB,GAAGP,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAOP,SAAS,EAAtB;AAEA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBT,QAAQ,CAACG,cAAD,EAAiB;AACpDO,IAAAA,SAAS,EAAE;AACPJ,MAAAA;AADO;AADyC,GAAjB,CAAvC;AAMAT,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,QAAIQ,gBAAgB,CAACM,OAAjB,KAA6B,IAAjC,EAAsC;AAClC,YAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAhB;AACA,YAAMC,OAAO,GAAG,EAAhB;AAGA,UAAIb,KAAJ,CAAUU,OAAV,EAAmBG,OAAnB;AAEAC,MAAAA,UAAU,CAAC,MAAM;AAAEX,QAAAA,gBAAgB,CAACM,OAAjB,CAAyBM,WAAzB,CAAqCL,OAArC;AAA+C,OAAxD,EAA0D,CAA1D,CAAV;AACH;AAGJ,GAZQ,EAYP,EAZO,CAAT;AAcA,sBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,GAAG,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA9BuBD,U;UAEPL,S,EAEkBC,Q;;;KAJXI,U","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport {Button} from 'antd';\r\nimport Quill from 'quill'\r\nimport 'quill/dist/quill.snow.css'\r\nimport {GET_POST_QUERY} from '../queries/posts';\r\n\r\n\r\nexport default function PostViewer() {\r\n    const contentContainer = useRef(null)\r\n    const {id} = useParams()\r\n\r\n    const {data, error, loading} = useQuery(GET_POST_QUERY, {\r\n        variables: {\r\n            id\r\n        }\r\n    })\r\n\r\n    useEffect(() => { //React Hook- component needs to do something after render\r\n        if (contentContainer.current !== null){\r\n            const article = document.createElement('article')\r\n            const options = {\r\n                \r\n            }\r\n            new Quill(article, options)\r\n\r\n            setTimeout(() => { contentContainer.current.appendChild(article) }, 0)\r\n        }\r\n        \r\n    \r\n    },[])\r\n\r\n    return (\r\n        <main className=\"post-viewer\">\r\n            <Button type=\"primary\">Edit Post</Button>\r\n            <section ref={contentContainer}></section>\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}