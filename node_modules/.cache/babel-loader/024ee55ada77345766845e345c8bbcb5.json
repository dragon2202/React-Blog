{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Documents\\\\reactblog\\\\src\\\\pages\\\\post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks'; //apollo/client\n\nimport { Button } from 'antd';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport { GET_POST_QUERY } from '../queries/posts';\nconst options = {\n  theme: 'snow'\n};\nexport default function PostViewer() {\n  _s();\n\n  const contentContainer = useRef(null);\n  const [editorEl, setEditorEl] = useState(null);\n  const {\n    id\n  } = useParams();\n  let history = useHistory(); // eslint-disable-next-line\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POST_QUERY, {\n    variables: {\n      id\n    },\n    onCompleted: ({\n      post\n    }) => {\n      if (post.text) {\n        const delta = JSON.parse(post.text);\n        editorEl.setContents(delta);\n      }\n    }\n  });\n\n  const editPost = () => history.push({\n    pathname: '/edit-post',\n    state: {\n      data\n    }\n  });\n\n  useEffect(() => {\n    setEditorEl(new Quill(contentContainer.current, options));\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"post-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: editPost,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      ref: contentContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostViewer, \"aHOTy5q/UsVxjwtAnkBRm67C5u4=\", false, function () {\n  return [useParams, useHistory, useQuery];\n});\n\n_c = PostViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewer\");","map":{"version":3,"sources":["C:/Users/Calvin/Documents/reactblog/src/pages/post.js"],"names":["React","useEffect","useRef","useState","useHistory","useParams","useQuery","Button","Quill","GET_POST_QUERY","options","theme","PostViewer","contentContainer","editorEl","setEditorEl","id","history","data","error","loading","variables","onCompleted","post","text","delta","JSON","parse","setContents","editPost","push","pathname","state","current"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAAQC,QAAR,QAAuB,qBAAvB,C,CAA6C;;AAC7C,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAhB;AAIA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,gBAAgB,GAAGX,MAAM,CAAC,IAAD,CAA/B;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACA,MAAIY,OAAO,GAAGb,UAAU,EAAxB,CAJiC,CAKjC;;AACA,QAAM;AAACc,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBd,QAAQ,CAACG,cAAD,EAAiB;AACpDY,IAAAA,SAAS,EAAE;AACPL,MAAAA;AADO,KADyC;AAIpDM,IAAAA,WAAW,EAAE,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAY;AACrB,UAAGA,IAAI,CAACC,IAAR,EAAc;AACV,cAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACC,IAAhB,CAAd;AACAV,QAAAA,QAAQ,CAACc,WAAT,CAAqBH,KAArB;AACH;AACJ;AATmD,GAAjB,CAAvC;;AAYA,QAAMI,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa;AAChCC,IAAAA,QAAQ,EAAE,YADsB;AAEhCC,IAAAA,KAAK,EAAE;AACHd,MAAAA;AADG;AAFyB,GAAb,CAAvB;;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW,CAAC,IAAIP,KAAJ,CAAUK,gBAAgB,CAACoB,OAA3B,EAAoCvB,OAApC,CAAD,CAAX;AACH,GAFQ,CAAT;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEmB,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAS,MAAA,GAAG,EAAEhB;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAnCuBD,U;UAGPP,S,EACCD,U,EAEiBE,Q;;;KANXM,U","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {useQuery} from '@apollo/react-hooks';//apollo/client\r\nimport {Button} from 'antd';\r\nimport Quill from 'quill'\r\nimport 'quill/dist/quill.snow.css'\r\nimport {GET_POST_QUERY} from '../queries/posts';\r\n\r\nconst options = {\r\n    theme: 'snow'\r\n}\r\n\r\nexport default function PostViewer() {\r\n    const contentContainer = useRef(null)\r\n    const [editorEl, setEditorEl] = useState(null)\r\n    const {id} = useParams()\r\n    let history = useHistory()\r\n    // eslint-disable-next-line\r\n    const {data, error, loading} = useQuery(GET_POST_QUERY, {\r\n        variables: {\r\n            id\r\n        },\r\n        onCompleted: ({post}) => {\r\n            if(post.text) {\r\n                const delta = JSON.parse(post.text);\r\n                editorEl.setContents(delta)\r\n            }\r\n        }\r\n    })\r\n\r\n    const editPost = () => history.push({\r\n        pathname: '/edit-post',\r\n        state: {\r\n            data\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setEditorEl(new Quill(contentContainer.current, options))\r\n    })\r\n\r\n    return (\r\n        <main className=\"post-viewer\">\r\n            <Button type=\"primary\" onClick={editPost}>Edit Post</Button>\r\n            <section ref={contentContainer}></section>\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}